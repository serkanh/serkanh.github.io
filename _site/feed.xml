<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>serkan haytac</title>
		<description>Stylish Jekyll Theme</description>
		<link>/</link>
		<atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>jq Cheat Sheet </title>
				<description>&lt;h5 id=&quot;to-follow-the-examples-you-can-download-the-sample-json-file-generated-via-httpswwwjson-generatorcom&quot;&gt;To follow the examples you can download the &lt;a href=&quot;/download/example.json&quot;&gt;sample json file&lt;/a&gt;. Generated via https://www.json-generator.com/&lt;/h5&gt;

&lt;h5 id=&quot;get-the-first-2-elements-of-the-a-given-array&quot;&gt;Get the first 2 elements of the a given array&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
➜  cat assets/example.json | jq '.[:2]'
[
  {
    &quot;_id&quot;: &quot;5babe2f088e7e9921a13e74b&quot;,
    &quot;index&quot;: 0,
    &quot;guid&quot;: &quot;e3440a1a-c657-4f27-9f34-f42fc45ca458&quot;,
    &quot;isActive&quot;: false,
    &quot;balance&quot;: &quot;$2,402.13&quot;,
    &quot;picture&quot;: &quot;http://placehold.it/32x32&quot;,
    &quot;age&quot;: 33,
    &quot;eyeColor&quot;: &quot;blue&quot;,
    &quot;name&quot;: &quot;Mildred Sexton&quot;,
    &quot;gender&quot;: &quot;female&quot;,
    &quot;company&quot;: &quot;HOPELI&quot;,
    &quot;email&quot;: &quot;mildredsexton@hopeli.com&quot;,
    &quot;phone&quot;: &quot;+1 (953) 555-2073&quot;,
    &quot;address&quot;: &quot;781 Whitney Avenue, Fruitdale, Maryland, 5417&quot;,
    &quot;about&quot;: &quot;Dolore aliquip ad officia elit qui commodo occaecat. Irure ipsum incididunt elit duis minim eu duis quis aliquip incididunt exercitation. Incididunt excepteur velit pariatur pariatur.\r\n&quot;,
    &quot;registered&quot;: &quot;2015-09-20T02:42:27 +04:00&quot;,
    &quot;latitude&quot;: -60.076234,
    &quot;longitude&quot;: -150.210389,
    &quot;tags&quot;: [
      &quot;aliqua&quot;,
      &quot;incididunt&quot;,
      &quot;ipsum&quot;,
      &quot;ipsum&quot;,
      &quot;fugiat&quot;,
      &quot;magna&quot;,
      &quot;eiusmod&quot;
    ],
    &quot;friends&quot;: [
      {
        &quot;id&quot;: 0,
        &quot;name&quot;: &quot;Lorraine Potter&quot;
      },
      {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;Lamb Barber&quot;
      },
      {
        &quot;id&quot;: 2,
        &quot;name&quot;: &quot;Finch Santos&quot;
      }
    ],
    &quot;greeting&quot;: &quot;Hello, Mildred Sexton! You have 7 unread messages.&quot;,
    &quot;favoriteFruit&quot;: &quot;banana&quot;
  },
  {
    &quot;_id&quot;: &quot;5babe2f042d8e766498685c7&quot;,
    &quot;index&quot;: 1,
    &quot;guid&quot;: &quot;86e6083d-24e8-4b51-aafe-82edeacfd8ed&quot;,
    &quot;isActive&quot;: false,
    &quot;balance&quot;: &quot;$1,254.83&quot;,
    &quot;picture&quot;: &quot;http://placehold.it/32x32&quot;,
    &quot;age&quot;: 27,
    &quot;eyeColor&quot;: &quot;blue&quot;,
    &quot;name&quot;: &quot;Judith Hunter&quot;,
    &quot;gender&quot;: &quot;female&quot;,
    &quot;company&quot;: &quot;FIBEROX&quot;,
    &quot;email&quot;: &quot;judithhunter@fiberox.com&quot;,
    &quot;phone&quot;: &quot;+1 (838) 510-3504&quot;,
    &quot;address&quot;: &quot;253 Orange Street, Gila, Vermont, 7709&quot;,
    &quot;about&quot;: &quot;Minim magna amet labore ex est elit amet officia amet anim. Elit aliqua ipsum do sit dolor laborum qui quis nulla. Amet non sit minim amet ea mollit elit ex pariatur.\r\n&quot;,
    &quot;registered&quot;: &quot;2014-03-26T07:07:10 +04:00&quot;,
    &quot;latitude&quot;: 59.112031,
    &quot;longitude&quot;: -47.288141,
    &quot;tags&quot;: [
      &quot;ea&quot;,
      &quot;minim&quot;,
      &quot;mollit&quot;,
      &quot;est&quot;,
      &quot;excepteur&quot;,
      &quot;eu&quot;,
      &quot;dolor&quot;
    ],
    &quot;friends&quot;: [
      {
        &quot;id&quot;: 0,
        &quot;name&quot;: &quot;Flora Richard&quot;
      },
      {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;Courtney Holden&quot;
      },
      {
        &quot;id&quot;: 2,
        &quot;name&quot;: &quot;Skinner Villarreal&quot;
      }
    ],
    &quot;greeting&quot;: &quot;Hello, Judith Hunter! You have 3 unread messages.&quot;,
    &quot;favoriteFruit&quot;: &quot;banana&quot;
  }
]

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;show-only-specific-keyvalue-pairs-ex-name-age&quot;&gt;Show only specific key/value pairs (ex: name, age)&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  cat download/example.json | jq '.[] | {name:.name,age:.age}'
{
  &quot;name&quot;: &quot;Mildred Sexton&quot;,
  &quot;age&quot;: 33
}
{
  &quot;name&quot;: &quot;Judith Hunter&quot;,
  &quot;age&quot;: 27
}
{
  &quot;name&quot;: &quot;Morton Harrell&quot;,
  &quot;age&quot;: 28
}
{
  &quot;name&quot;: &quot;Sherri Bowers&quot;,
  &quot;age&quot;: 22
}
{
  &quot;name&quot;: &quot;Lambert Stark&quot;,
  &quot;age&quot;: 33
}
{
  &quot;name&quot;: &quot;Jessie Turner&quot;,
  &quot;age&quot;: 27
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;query-based-on-gender-field&quot;&gt;Query based on gender field&lt;/h5&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  cat assets/example.json | jq '.[]|select(.gender==&quot;male&quot;)' 
{
  &quot;_id&quot;: &quot;5babe2f0c2aa2072304da586&quot;,
  &quot;index&quot;: 2,
  &quot;guid&quot;: &quot;81be2a22-04e2-43c1-9c38-14b01802612f&quot;,
  &quot;isActive&quot;: false,
  &quot;balance&quot;: &quot;$2,737.55&quot;,
  &quot;picture&quot;: &quot;http://placehold.it/32x32&quot;,
  &quot;age&quot;: 28,
  &quot;eyeColor&quot;: &quot;brown&quot;,
  &quot;name&quot;: &quot;Morton Harrell&quot;,
  &quot;gender&quot;: &quot;male&quot;,
  &quot;company&quot;: &quot;GLEAMINK&quot;,
  &quot;email&quot;: &quot;mortonharrell@gleamink.com&quot;,
  &quot;phone&quot;: &quot;+1 (934) 471-3056&quot;,
  &quot;address&quot;: &quot;341 Hall Street, Lloyd, Georgia, 6420&quot;,
  &quot;about&quot;: &quot;Id irure ipsum elit cupidatat. Qui do commodo quis consectetur ea sint pariatur minim. Enim consequat ex incididunt quis consectetur est nostrud proident velit Lorem nulla laboris mollit. Non duis id nisi eiusmod.\r\n&quot;,
  &quot;registered&quot;: &quot;2016-11-20T04:59:36 +05:00&quot;,
  &quot;latitude&quot;: -72.735366,
  &quot;longitude&quot;: 173.475387,
  &quot;tags&quot;: [
    &quot;mollit&quot;,
    &quot;nisi&quot;,
    &quot;dolor&quot;,
    &quot;amet&quot;,
    &quot;minim&quot;,
    &quot;eu&quot;,
    &quot;non&quot;
  ],
  &quot;friends&quot;: [
    {
      &quot;id&quot;: 0,
      &quot;name&quot;: &quot;Wendy Horne&quot;
    },
    {
      &quot;id&quot;: 1,
      &quot;name&quot;: &quot;Terrell Cantrell&quot;
    },
    {
      &quot;id&quot;: 2,
      &quot;name&quot;: &quot;Gallagher Brock&quot;
    }
  ],
  &quot;greeting&quot;: &quot;Hello, Morton Harrell! You have 10 unread messages.&quot;,
  &quot;favoriteFruit&quot;: &quot;apple&quot;
}
{
  &quot;_id&quot;: &quot;5babe2f047ed2184c3ffdd15&quot;,
  &quot;index&quot;: 4,
  &quot;guid&quot;: &quot;7da190d7-1b3f-4c13-ad85-c8ea74ec961a&quot;,
  &quot;isActive&quot;: true,
  &quot;balance&quot;: &quot;$2,428.25&quot;,
  &quot;picture&quot;: &quot;http://placehold.it/32x32&quot;,
  &quot;age&quot;: 33,
  &quot;eyeColor&quot;: &quot;green&quot;,
  &quot;name&quot;: &quot;Lambert Stark&quot;,
  &quot;gender&quot;: &quot;male&quot;,
  &quot;company&quot;: &quot;BEADZZA&quot;,
  &quot;email&quot;: &quot;lambertstark@beadzza.com&quot;,
  &quot;phone&quot;: &quot;+1 (968) 526-3075&quot;,
  &quot;address&quot;: &quot;498 Remsen Street, Deltaville, Kentucky, 362&quot;,
  &quot;about&quot;: &quot;Deserunt nulla dolor eiusmod consectetur nostrud non. Sint ea officia velit aliqua occaecat id ad. Dolor non adipisicing irure dolore id eu esse anim pariatur sint irure. Id nisi anim ipsum aute quis nisi ex exercitation velit nostrud proident cupidatat. Consectetur culpa minim cillum officia aliqua do culpa pariatur sit excepteur adipisicing. Exercitation commodo dolor reprehenderit reprehenderit aliqua ad sint amet est mollit aute. Fugiat aliqua laboris cupidatat duis enim tempor voluptate ipsum nulla exercitation.\r\n&quot;,
  &quot;registered&quot;: &quot;2018-09-10T10:10:26 +04:00&quot;,
  &quot;latitude&quot;: 10.212328,
  &quot;longitude&quot;: 15.899575,
  &quot;tags&quot;: [
    &quot;non&quot;,
    &quot;exercitation&quot;,
    &quot;veniam&quot;,
    &quot;proident&quot;,
    &quot;excepteur&quot;,
    &quot;velit&quot;,
    &quot;in&quot;
  ],
  &quot;friends&quot;: [
    {
      &quot;id&quot;: 0,
      &quot;name&quot;: &quot;Trina Guerrero&quot;
    },
    {
      &quot;id&quot;: 1,
      &quot;name&quot;: &quot;Flynn Sullivan&quot;
    },
    {
      &quot;id&quot;: 2,
      &quot;name&quot;: &quot;Cochran Wolf&quot;
    }
  ],
  &quot;greeting&quot;: &quot;Hello, Lambert Stark! You have 7 unread messages.&quot;,
  &quot;favoriteFruit&quot;: &quot;strawberry&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;query-male-and-active-users&quot;&gt;Query male and active users&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜ cat assets/example.json | jq '.[]|select(.gender==&quot;male&quot; and .isActive==true )'

{
  &quot;_id&quot;: &quot;5babe2f047ed2184c3ffdd15&quot;,
  &quot;index&quot;: 4,
  &quot;guid&quot;: &quot;7da190d7-1b3f-4c13-ad85-c8ea74ec961a&quot;,
  &quot;isActive&quot;: true,
  &quot;balance&quot;: &quot;$2,428.25&quot;,
  &quot;picture&quot;: &quot;http://placehold.it/32x32&quot;,
  &quot;age&quot;: 33,
  &quot;eyeColor&quot;: &quot;green&quot;,
  &quot;name&quot;: &quot;Lambert Stark&quot;,
  &quot;gender&quot;: &quot;male&quot;,
  &quot;company&quot;: &quot;BEADZZA&quot;,
  &quot;email&quot;: &quot;lambertstark@beadzza.com&quot;,
  &quot;phone&quot;: &quot;+1 (968) 526-3075&quot;,
  &quot;address&quot;: &quot;498 Remsen Street, Deltaville, Kentucky, 362&quot;,
  &quot;about&quot;: &quot;Deserunt nulla dolor eiusmod consectetur nostrud non. Sint ea officia velit aliqua occaecat id ad. Dolor non adipisicing irure dolore id eu esse anim pariatur sint irure. Id nisi anim ipsum aute quis nisi ex exercitation velit nostrud proident cupidatat. Consectetur culpa minim cillum officia aliqua do culpa pariatur sit excepteur adipisicing. Exercitation commodo dolor reprehenderit reprehenderit aliqua ad sint amet est mollit aute. Fugiat aliqua laboris cupidatat duis enim tempor voluptate ipsum nulla exercitation.\r\n&quot;,
  &quot;registered&quot;: &quot;2018-09-10T10:10:26 +04:00&quot;,
  &quot;latitude&quot;: 10.212328,
  &quot;longitude&quot;: 15.899575,
  &quot;tags&quot;: [
    &quot;non&quot;,
    &quot;exercitation&quot;,
    &quot;veniam&quot;,
    &quot;proident&quot;,
    &quot;excepteur&quot;,
    &quot;velit&quot;,
    &quot;in&quot;
  ],
  &quot;friends&quot;: [
    {
      &quot;id&quot;: 0,
      &quot;name&quot;: &quot;Trina Guerrero&quot;
    },
    {
      &quot;id&quot;: 1,
      &quot;name&quot;: &quot;Flynn Sullivan&quot;
    },
    {
      &quot;id&quot;: 2,
      &quot;name&quot;: &quot;Cochran Wolf&quot;
    }
  ],
  &quot;greeting&quot;: &quot;Hello, Lambert Stark! You have 7 unread messages.&quot;,
  &quot;favoriteFruit&quot;: &quot;strawberry&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h5 id=&quot;search-for-string-in-key-values&quot;&gt;Search for string in key values.&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  cat assets/example.json | jq '.[]|select(.address | contains(&quot;781 Whitney&quot;))'  
{
  &quot;_id&quot;: &quot;5babe2f088e7e9921a13e74b&quot;,
  &quot;index&quot;: 0,
  &quot;guid&quot;: &quot;e3440a1a-c657-4f27-9f34-f42fc45ca458&quot;,
  &quot;isActive&quot;: false,
  &quot;balance&quot;: &quot;$2,402.13&quot;,
  &quot;picture&quot;: &quot;http://placehold.it/32x32&quot;,
  &quot;age&quot;: 33,
  &quot;eyeColor&quot;: &quot;blue&quot;,
  &quot;name&quot;: &quot;Mildred Sexton&quot;,
  &quot;gender&quot;: &quot;female&quot;,
  &quot;company&quot;: &quot;HOPELI&quot;,
  &quot;email&quot;: &quot;mildredsexton@hopeli.com&quot;,
  &quot;phone&quot;: &quot;+1 (953) 555-2073&quot;,
  &quot;address&quot;: &quot;781 Whitney Avenue, Fruitdale, Maryland, 5417&quot;,
  &quot;about&quot;: &quot;Dolore aliquip ad officia elit qui commodo occaecat. Irure ipsum incididunt elit duis minim eu duis quis aliquip incididunt exercitation. Incididunt excepteur velit pariatur pariatur.\r\n&quot;,
  &quot;registered&quot;: &quot;2015-09-20T02:42:27 +04:00&quot;,
  &quot;latitude&quot;: -60.076234,
  &quot;longitude&quot;: -150.210389,
  &quot;tags&quot;: [
    &quot;aliqua&quot;,
    &quot;incididunt&quot;,
    &quot;ipsum&quot;,
    &quot;ipsum&quot;,
    &quot;fugiat&quot;,
    &quot;magna&quot;,
    &quot;eiusmod&quot;
  ],
  &quot;friends&quot;: [
    {
      &quot;id&quot;: 0,
      &quot;name&quot;: &quot;Lorraine Potter&quot;
    },
    {
      &quot;id&quot;: 1,
      &quot;name&quot;: &quot;Lamb Barber&quot;
    },
    {
      &quot;id&quot;: 2,
      &quot;name&quot;: &quot;Finch Santos&quot;
    }
  ],
  &quot;greeting&quot;: &quot;Hello, Mildred Sexton! You have 7 unread messages.&quot;,
  &quot;favoriteFruit&quot;: &quot;banana&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
				<pubDate>Wed, 26 Sep 2018 10:40:00 +0000</pubDate>
				<link>/jq,cli/2018/09/26/jq-cheat-sheet.html</link>
				<guid isPermaLink="true">/jq,cli/2018/09/26/jq-cheat-sheet.html</guid>
			</item>
		
			<item>
				<title>Useful EC2 cli commands. </title>
				<description>&lt;p&gt;&lt;a href=&quot;https://docs.aws.amazon.com/cli/latest/userguide/controlling-output.html&quot;&gt;AWS Docs&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;get-the-internal-ip-address-of-ec2-instances-that-are-on-windows-platform&quot;&gt;Get the internal ip address of ec2 instances that are on Windows platform.&lt;/h5&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  ~ aws ec2 describe-instances --filters &quot;Name=platform,Values=windows&quot; &quot;Name=instance-state-name,Values=running&quot; --query 'Reservations[*].Instances[*].[InstanceId, PrivateIpAddress,PublicIpAdress]' --output table --region us-east-1 
-------------------------------------------
|            DescribeInstances            |
+----------------------+------------------+
|  i-7a644a55          |  192.168.43.26   |
|  i-24d62cdc          |  192.168.43.80   |
|  i-8f0ff908          |  10.0.4.35       |
|  i-7eb3a95e          |  10.0.1.115      |
|  i-6b612644          |  192.168.43.75   |
|  i-071708d7          |  10.0.4.31       |
|  i-8f2e57a0          |  192.168.43.69   |
|  i-8a273eaa          |  10.0.2.136      |
|  i-0ac96c4d095cee4d4 |  10.0.1.251      |
|  i-729a4a51          |  10.0.2.156      |
|  i-68349581          |  10.0.5.89       |
|  i-fe8e69dd          |  10.0.2.179      |
|  i-91d87eb2          |  10.0.1.30       |
|  i-988cf1b7          |  192.168.43.43   |
|  i-52011b72          |  10.0.2.203      |
|  i-1fb75cc9          |  10.0.1.254      |
|  i-bb044044          |  192.168.33.20   |
|  i-960e75b9          |  192.168.43.62   |
|  i-88b493a7          |  192.168.43.117  |
|  i-6a573485          |  10.0.3.140      |
|  i-462217c2          |  10.0.4.96       |
|  i-adf5267b          |  10.0.1.17       |
+----------------------+------------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;get-both-public-and-private-ip-address-of-ec2-instances-that-are-on-windows-platform&quot;&gt;Get both public and private ip address of ec2 instances that are on Windows platform.&lt;/h5&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  ~ aws ec2 describe-instances --filters &quot;Name=platform,Values=windows&quot; &quot;Name=instance-state-name,Values=running&quot; --query 'Reservations[*].Instances[*].[InstanceId, PrivateIpAddress,PublicIpAdress]' --output table --region us-east-1 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;get-public--private-ip-address-as-well-as-tags&quot;&gt;Get public &amp;amp; private ip address as well as tags&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws ec2 describe-instances --filters &quot;Name=platform,Values=windows&quot; &quot;Name=instance-state-name,Values=running&quot; --query 'Reservations[*].Instances[*].[InstanceId, PrivateIpAddress, PublicIpAddress, Tags[0].Value, Tags[1].Value, Tags[2].Value,Tags[3].Value]' --output table --region us-east-1 
----------------------------------------------------------------------------------------------------------------------------------------
|                                                           DescribeInstances                                                          |
+---------------------+-----------------+----------------+------------------------+-------------+----------------------+---------------+
|  i-7a644a55         |  192.168.43.26  |  11.11.11.11  |  AmzEIntra             |  backup     |  VPN                 |  Prod         |
|  i-24d62cdc         |  192.168.43.80  |  11.11.11.11  |  Stage                 |  StgSQLSTG  |  BI                  |  backup       |
|  i-8f0ff908         |  10.0.4.35      |  11.11.11.11    |  Track1                |  WEB        |  Prod                |  AmzEWeb01d   |
|  i-7eb3a95e         |  10.0.1.115     |  11.11.11.11   |  Track1                |  Prod       |  DB                  |  AmzESQL01    |
|  i-6b612644         |  192.168.43.75  |  11.11.11.11    |  WEB                   |  Track1     |  Stage               |  StgWeb02     |
|  i-071708d7         |  10.0.4.31      |  11.11.11.11   |  Track1                |  AmzEWeb02d |  backup              |  Prod         |
|  i-8f2e57a0         |  192.168.43.69  |  11.11.11.116 |  AD                    |  AmzDevDC01 |  DEV                 |  Infra        |
|  i-8a273eaa         |  10.0.2.136     |  11.11.11.11  |  AmzEWeb01             |  WEB        |  ShutDown T1         |  Track1       |
|  i-0ac96c4d095cee4d4|  10.0.1.251     |  11.11.11.11  |  Attunity Cloudbeam-v5 |  None       |  None                |  None         |
|  i-729a4a51         |  10.0.2.156     |  11.11.11.11    |  Prod                  |  AmzEWsvc01 |  backup              |  SVC          |
|  i-68349581         |  10.0.5.89      |  11.11.11.11  |  AmzEWeb02e            |  Track1     |  Prod                |  backup       |
|  i-fe8e69dd         |  10.0.2.179     |  11.11.11.11     |  SMTP                  |  Infra      |  AmzESMTP01          |  ShutDown T1  |
|  i-91d87eb2         |  10.0.1.30      |  11.11.11.11    |  AmzEDC01              |  AD         |  Prod                |  backup       |
|  i-988cf1b7         |  192.168.43.43  |  11.11.11.11    |  Stage                 |  Web        |  StgWeb01            |  Track1       |
|  i-52011b72         |  10.0.2.203     |  11.11.11.11   |  backup                |  Prod       |  WEB                 |  AmzEWeb02    |
|  i-1fb75cc9         |  10.0.1.254     |  11.11.11.11  |  AMZESQLSTG            |  BI         |  Prod                |  backup       |
+---------------------+-----------------+----------------+------------------------+-------------+----------------------+---------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
				<pubDate>Mon, 20 Aug 2018 11:40:00 +0000</pubDate>
				<link>/aws,/ec2,/cli/2018/08/20/useful-aws-cli-ec2-commands.html</link>
				<guid isPermaLink="true">/aws,/ec2,/cli/2018/08/20/useful-aws-cli-ec2-commands.html</guid>
			</item>
		
			<item>
				<title>Multi stage api gateway deployment with serverless framework.</title>
				<description>&lt;p&gt;Both serverless framework and api gateway has the concept of stages.&lt;/p&gt;

&lt;p&gt;We will build a serverless application with api gateway and deploy it to multiple stages. What this means is that &lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt; lambda functions will be associated with the api gateways &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/&lt;/code&gt; stage and prod with &lt;code class=&quot;highlighter-rouge&quot;&gt;prod&lt;/code&gt; stage.&lt;/p&gt;

&lt;p&gt;First we start by setting up multiple stages for our lambda functions. To keep it simple we will simply set different environment variables per lambda function stage. Function basically will read from the env var and return its value as a string. We will deploy to different stages with serverless’ &lt;code class=&quot;highlighter-rouge&quot;&gt;--stage&lt;/code&gt; flag.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/serkanh/serverless-api-gateway-multi-stage-demo&quot;&gt;Repo url&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
service: serverless-api-gateway-multi-stage-demo

## This is where we setup env variables that will be set for different stages of lambda functions.
custom:
  dev_APP_STAGE: 'DEV STAGE'
  prod_APP_STAGE: 'PROD STAGE'
provider:
  name: aws
  runtime: nodejs8.10
  environment:
    APP_STAGE: ${self:custom.${opt:stage, self:provider.stage}_APP_STAGE}
functions:
  hello:
    handler: handler.hello

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and deploy to both &lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;prod&lt;/code&gt; stages&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sls deploy --stage=dev
sls deploy --stage=prod
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;if you are using aws profiles you can deploy by specifiying the aws profile you’d like to use &lt;code class=&quot;highlighter-rouge&quot;&gt;sls --aws-profile=&amp;lt;aws-personal-profile&amp;gt; deploy --stage=dev&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;When you invoke the function on both envs, it should simply return the env name a string.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  serverless-api-gateway-multi-stage-demo git:(master) ✗ sls invoke -f hello --stage=dev
{
    &quot;statusCode&quot;: 200,
    &quot;body&quot;: &quot;{\&quot;message\&quot;:\&quot;Current lambda function env DEV STAGE\&quot;,\&quot;input\&quot;:{}}&quot;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  serverless-api-gateway-multi-stage-demo git:(master) ✗ sls invoke -f hello --stage=prod
{
    &quot;statusCode&quot;: 200,
    &quot;body&quot;: &quot;{\&quot;message\&quot;:\&quot;Current lambda function env PROD STAGE\&quot;,\&quot;input\&quot;:{}}&quot;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we want to create a openapi(swagger) file to define paths for our api. Also we will add api gateway stages, deployment and associated stage variables for api gateway.&lt;/p&gt;

&lt;p&gt;One gotcha of this setup is that we need to give permissions to api gateway to execute each individual function based on env. This is because we are using lambda functions stage name as a api gateway stage variable.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;swagger: &quot;2.0&quot;
schemes:
- &quot;https&quot;
paths:
  /:
    get:
      produces:
      - &quot;application/json&quot;
      responses:
        200:
          description: &quot;200 response&quot;
          schema:
            $ref: &quot;#/definitions/Empty&quot;
      x-amazon-apigateway-integration:
        uri: &quot;arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:174076265606:function:serverless-multistage-${stageVariables.Stage}-hello/invocations&quot;
        responses:
          default:
            statusCode: &quot;200&quot;
        passthroughBehavior: &quot;when_no_match&quot;
        httpMethod: &quot;POST&quot;
        contentHandling: &quot;CONVERT_TO_TEXT&quot;
        type: &quot;aws&quot;
definitions:
  Empty:
    type: &quot;object&quot;
    title: &quot;Empty Schema&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We will include the swagger file in our serverless.yml. One gotcha of using api gateway stage variables in serverless is that both serverless and api gateway and serverless framework is using the same syntax to refer to variables. In order to get around this we will use custom variable syntax so serverless does not interpret this as a serverless variable.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//serverless.yml
provider:
  name: aws
  runtime: nodejs8.10
  environment:
    APP_STAGE: ${self:custom.${opt:stage, self:provider.stage}_APP_STAGE}
  variableSyntax: &quot;\\${((?!stageVariables)[ ~:a-zA-Z0-9._'\&quot;,\\-\\/\\(\\)]+?)}&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//swagger.yml
 x-amazon-apigateway-integration:
        uri: &quot;arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:174076265606:function:serverless-multistage-${stageVariables.Stage}-hello/invocations&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Give api-gateway execute perm on dev hello function&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
aws lambda add-permission    --function-name &quot;arn:aws:lambda:us-east-1:174076265606:function:serverless-multistage-dev-hello&quot;    --source-arn &quot;arn:aws:execute-api:us-east-1:174076265606:rci6d8tuc7/*/GET/&quot;   --principal apigateway.amazonaws.com    --statement-id 8513374b-509d-4cfc-920c-c69e72264c7a    --action lambda:InvokeFunction

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Give api-gateway execute perm on prod  hello function&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws lambda add-permission    --function-name &quot;arn:aws:lambda:us-east-1:174076265606:function:serverless-multistage-prod-hello&quot;    --source-arn &quot;arn:aws:execute-api:us-east-1:174076265606:rci6d8tuc7/*/GET/&quot;   --principal apigateway.amazonaws.com    --statement-id 8513374b-509d-4cfc-920c-c69e72264c7a    --action lambda:InvokeFunction

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Final &lt;code class=&quot;highlighter-rouge&quot;&gt;serverless.yml&lt;/code&gt; should look like below.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;

service: serverless-multistage

##### This is where we setup env variables that will be set for different stages of lambda functions.
custom:
  dev_APP_STAGE: 'DEV STAGE'
  prod_APP_STAGE: 'PROD STAGE'


provider:
  name: aws
  runtime: nodejs8.10
  environment:
    APP_STAGE: ${self:custom.${opt:stage, self:provider.stage}_APP_STAGE}
  variableSyntax: &quot;\\${((?!stageVariables)[ ~:a-zA-Z0-9._'\&quot;,\\-\\/\\(\\)]+?)}&quot;
resources:
  Resources:
    ApiGatewayRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: ${self:service}
        Body: ${file(swagger.yml)}
    ApiGatewayDeploymentDev:
      Type: AWS::ApiGateway::Deployment
      Properties:
        RestApiId:
          Ref: ApiGatewayRestApi
        Description: 'Dev deployment'

    
    ApiGatewayDeploymentProd:
      Type: AWS::ApiGateway::Deployment
      Properties:
        RestApiId:
          Ref: ApiGatewayRestApi
        Description: 'Prod Deployment'

    ApiGatewayStageDev:
        Type: 'AWS::ApiGateway::Stage'
        Properties:
          StageName: dev
          Description: Dev Stage
          RestApiId: 
            Ref: ApiGatewayRestApi
          DeploymentId: 
            Ref: ApiGatewayDeploymentDev
          Variables:
            &quot;Stage&quot;: &quot;dev&quot;
    ApiGatewayStageProd:
        Type: 'AWS::ApiGateway::Stage'
        Properties:
          StageName: prod
          Description: Prod Stage
          RestApiId: 
            Ref: ApiGatewayRestApi
          DeploymentId: 
            Ref: ApiGatewayDeploymentProd
          Variables:
            &quot;Stage&quot;: &quot;prod&quot;

functions:
  hello:
    handler: handler.hello


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To test the &lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;prod&lt;/code&gt; functionality in api gateway simply go into api gateway console -&amp;gt;
 Resources -&amp;gt; Get method&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/lambda-integration-req1.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Test -&amp;gt; Enter dev into &lt;code class=&quot;highlighter-rouge&quot;&gt;Stage&lt;/code&gt; stage variable.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/dev-test.png&quot; alt=&quot;dev stage var&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Test -&amp;gt; Enter prod into &lt;code class=&quot;highlighter-rouge&quot;&gt;Stage&lt;/code&gt; stage variable.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/prod-test.png&quot; alt=&quot;prod stage var&quot; /&gt;&lt;/p&gt;
</description>
				<pubDate>Thu, 09 Aug 2018 15:51:00 +0000</pubDate>
				<link>/aws,/lambda,/serverless,cloudformation/2018/08/09/multi-stage-api-gateway-deployment-with-serverless.html</link>
				<guid isPermaLink="true">/aws,/lambda,/serverless,cloudformation/2018/08/09/multi-stage-api-gateway-deployment-with-serverless.html</guid>
			</item>
		
			<item>
				<title>Useful aws cli rds  commands i use often. </title>
				<description>&lt;h4 id=&quot;get-the-full-attributes-of-rds-instances-with-its-instancesidentifier&quot;&gt;Get the full attributes of rds instances with its instancesidentifier&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws --profile=HA rds describe-db-instances --query 'DBInstances[?DBInstanceIdentifier==`evox-dev`]'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;get-list-of-snapshots-of-rds-database&quot;&gt;Get list of snapshots of RDS database.&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws --profile=HA rds describe-db-snapshots --db-instance-identifier evox-dev

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;get-list-of-snapshots-of-rds-databse-but-only-display-snapshot-id-and-creation-time-with-jq&quot;&gt;Get list of snapshots of RDS databse but only display snapshot id and creation time with jq.&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws --profile=HA rds describe-db-snapshots --db-instance-identifier evox-dev | jq '[.DBSnapshots[] | {Snapshot_Identifier:.DBSnapshotIdentifier,Creationtime:.SnapshotCreateTime}]'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;get-the-latestrestorabletime-that-is-typically-within-the-range-of-5-min-of-current-time&quot;&gt;Get the LatestRestorableTime that is typically within the range of 5 min of current time.&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws --profile=HA rds  describe-db-instances --query 'DBInstances[?DBInstanceIdentifier==`evox-dev`].LatestRestorableTime'  --output text
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  serkanh.github.io git:(master) aws --profile=HA rds  describe-db-instances --query 'DBInstances[?DBInstanceIdentifier==`evox-dev`].LatestRestorableTime'  --output text | TZ='America/New_York' date
Mon Jul 23 13:01:59 EDT 2018
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
				<pubDate>Wed, 11 Jul 2018 15:51:00 +0000</pubDate>
				<link>/aws,/rds,/cli/2018/07/11/aws-cli-rds-commands.html</link>
				<guid isPermaLink="true">/aws,/rds,/cli/2018/07/11/aws-cli-rds-commands.html</guid>
			</item>
		
			<item>
				<title>Some useful cloudtrail commands i use often. </title>
				<description>&lt;p&gt;&lt;a href=&quot;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/view-cloudtrail-events-cli.html#attribute-lookup-example&quot;&gt;AWS Docs&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;get-the-last-10-actions-done-by-iam-user&quot;&gt;Get the last 10 actions done by IAM user.&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  ~ aws cloudtrail lookup-events --lookup-attributes aws lookup-events --lookup-attributes AttributeKey=Username,AttributeValue=username --max-items 10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
				<pubDate>Tue, 10 Jul 2018 15:51:00 +0000</pubDate>
				<link>/aws,/clooudtrail,/cli/2018/07/10/useful-aws-cli-cloudtrail-commands.html</link>
				<guid isPermaLink="true">/aws,/clooudtrail,/cli/2018/07/10/useful-aws-cli-cloudtrail-commands.html</guid>
			</item>
		
			<item>
				<title>TIL -AWS has a nice api endpoint to get its ip ranges. </title>
				<description>&lt;h5 id=&quot;not-only-you-can-query-by-service-but-also-you-can-get-notification-of-any-changes-to-ip-ranges-by-subscribing-to-sns-amazonipspacechanged-source&quot;&gt;Not only you can query by service but also you can get notification of any changes to ip ranges by subscribing to SNS &lt;code class=&quot;highlighter-rouge&quot;&gt;AmazonIpSpaceChanged&lt;/code&gt;. &lt;a href=&quot;https://docs.aws.amazon.com/general/latest/gr/aws-ip-ranges.html&quot;&gt;source&lt;/a&gt;&lt;/h5&gt;

&lt;h5 id=&quot;to-get-ec2-service-ip-ranges&quot;&gt;To get ec2 service ip ranges&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt; curl -s https://ip-ranges.amazonaws.com/ip-ranges.json | jq -r '.prefixes[] | select(.service==&quot;EC2&quot;) | .ip_prefix'

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;to-select-services-in-us-east-1-and-us-west-2-this-type-of-filtering-might-come-handy-when-a-service-provider--who-runs-on-aws-specifically-mentions-which-regions-they-run-their-service-on-ie-circleci&quot;&gt;To select services in us-east-1 and us-west-2. This type of filtering might come handy when a service provider  who runs on AWS specifically mentions which regions they run their service on ie &lt;a href=&quot;https://discuss.circleci.com/t/circleci-ip-range/10759&quot;&gt;circleci&lt;/a&gt;&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt; curl -s https://ip-ranges.amazonaws.com/ip-ranges.json | jq -r '.prefixes[] | select(select(.region==&quot;us-east-1&quot; or .region==&quot;us-east-2&quot; or .region==&quot;us-west-1&quot;) and .service==&quot;EC2&quot;) | .ip_prefix'
18.208.0.0/13
52.95.245.0/24
54.196.0.0/15
216.182.224.0/21
52.119.224.0/21
216.182.232.0/22
52.144.193.128/26
107.20.0.0/14
52.94.224.0/20
67.202.0.0/18
52.95.0.0/20
205.251.246.0/24
52.93.249.0/24
207.171.160.0/20
184.73.0.0/16
54.80.0.0/13
.
.
.

54.172.0.0/15
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; curl -s https://ip-ranges.amazonaws.com/ip-ranges.json | jq -r '.prefixes[] | select(select(.region==&quot;us-east-1&quot; or .region==&quot;us-east-2&quot; or .region==&quot;us-west-1&quot; ) and .service==&quot;EC2&quot;) | .ip_prefix+ &quot; &quot; +.region' ' 
18.208.0.0/13 us-east-1
52.95.245.0/24 us-east-1
54.196.0.0/15 us-east-1
54.241.0.0/16 us-west-1
184.169.128.0/17 us-west-1
216.182.224.0/21 us-east-1
216.182.232.0/22 us-east-1
54.193.0.0/16 us-west-1
107.20.0.0/14 us-east-1
67.202.0.0/18 us-east-1
184.73.0.0/16 us-east-1
54.80.0.0/13 us-east-1
.
.
.
54.172.0.0/15 us-east-1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
				<pubDate>Mon, 09 Jul 2018 15:51:00 +0000</pubDate>
				<link>/aws,/til,/2018/07/09/TIL-AWS-ip-range-api.html</link>
				<guid isPermaLink="true">/aws,/til,/2018/07/09/TIL-AWS-ip-range-api.html</guid>
			</item>
		
			<item>
				<title>Setting up SQS as event source with serverless and cloudformation. </title>
				<description>&lt;h5 id=&quot;aws-recently-announced-sqs-as-an-event-source-for-lambda-functions-this-is-now-ga-and-looks-like-there-is-already-a-pr-for-it-to-to-be-soon-implemened-in-serverless-framework-as-well&quot;&gt;AWS recently announced SQS as an event source for lambda functions. This is now GA and looks like there is already a &lt;a href=&quot;https://github.com/serverless/serverless/pull/5074&quot;&gt;pr&lt;/a&gt; for it to to be soon implemened in &lt;a href=&quot;https://serverless.com/&quot;&gt;serverless framework&lt;/a&gt; as well.&lt;/h5&gt;

&lt;h5 id=&quot;as-soon-as-it-was-announced-we-had-a-use-case-for-this-implementation-in-a-project-that-we-built-with-serverless--so-instead-of-waiting-pr-to-be-merged--i-decided-to-impletemented-via-cloudformation&quot;&gt;As soon as it was announced we had a use case for this implementation in a project that we built with serverless . So instead of waiting pr to be merged  i decided to impletemented via cloudformation.&lt;/h5&gt;

&lt;h5 id=&quot;below-is-the-serverlessyml-file-with-its-entirety-cloudformation-creates-a-sqs-and-and-eventsourcemapping-for-the-function-supervisor&quot;&gt;Below is the &lt;code class=&quot;highlighter-rouge&quot;&gt;serverless.yml&lt;/code&gt; file with its entirety. Cloudformation creates a sqs and and EventSourceMapping for the function &lt;code class=&quot;highlighter-rouge&quot;&gt;supervisor&lt;/code&gt;.&lt;/h5&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;

service: cd-evox

provider:
  name: aws
  runtime:  nodejs8.10
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - &quot;lambda:InvokeFunction&quot;
        - &quot;lambda:InvokeAsync&quot;
        - &quot;sqs:ReceiveMessage&quot;
        - &quot;sqs:DeleteMessage&quot;
        - &quot;sqs:GetQueueAttributes&quot;
      Resource: &quot;*&quot;




functions:
  supervisor:
    handler: lambdas.supervisor


# Create Sqs Queue
resources:
  Resources:
    mapping:
      Type: AWS::Lambda::EventSourceMapping
      Properties:
        EventSourceArn:
          Fn::GetAtt:
            - CdEvoxQueue
            - Arn
        FunctionName:
          Fn::GetAtt:
            - SupervisorLambdaFunction
            - Arn
    CdEvoxQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: cd_evox_${opt:stage}
        MessageRetentionPeriod: '1209600'
        VisibilityTimeout: '60'

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/sqs-as-eventsource.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Maximum batch size currently supported is between 1-10 so if you define a  batch size higher than 10 you will receive the error message:
&lt;code class=&quot;highlighter-rouge&quot;&gt;An error occurred: mapping - Maximum batch size must be between 1 and 10 inclusive (Service: AWSLambda; Status Code: 400; Error Code: InvalidParameterValueException; Request ID: a03c1359-7cd5-11e8-8e95-8fcb11ee2f63).&lt;/code&gt;&lt;/p&gt;
</description>
				<pubDate>Sat, 30 Jun 2018 22:33:00 +0000</pubDate>
				<link>/aws,/lambda,/serverless/2018/06/30/setting-up-sqs-as-event-source-with-serverless-and-cloudformation..html</link>
				<guid isPermaLink="true">/aws,/lambda,/serverless/2018/06/30/setting-up-sqs-as-event-source-with-serverless-and-cloudformation..html</guid>
			</item>
		
			<item>
				<title>Useful github search queries </title>
				<description>&lt;h5 id=&quot;search-a-npm-package-that-is-used-in-a-project-this-is-useful-to-get-ideas-of-how-package-is-setup-and-used-github&quot;&gt;Search a npm package that is used in a project. This is useful to get ideas of how package is setup and used. &lt;a href=&quot;https://github.com/search?utf8=%E2%9C%93&amp;amp;q=rbac+filename%3Apackage.json&amp;amp;ref=simplesearch&quot;&gt;github&lt;/a&gt;&lt;/h5&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rbac filename:package.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h5 id=&quot;search-repos-with-more-than-100-stars-github&quot;&gt;Search repos with more than 100 stars. &lt;a href=&quot;https://github.com/search?q=rbac+filename%3Apackage.json+stars%3A%3E100&amp;amp;type=Repositories&quot;&gt;github&lt;/a&gt;&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; rbac filename:package.json stars:&amp;gt;100
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;search-repos-with-more-than-100-stars-and-a-javascript-repogithub&quot;&gt;Search repos with more than 100 stars and a javascript repo.&lt;a href=&quot;https://github.com/search?q=rbac+filename%3Apackage.json+stars%3A%3E100+language%3Ajavascript&amp;amp;type=Repositories&quot;&gt;github&lt;/a&gt;&lt;/h5&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rbac filename:package.json stars:&amp;gt;100 language:javascript 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;search-string-ecs-in-a-file-with-tf-extension-github&quot;&gt;Search string &lt;code class=&quot;highlighter-rouge&quot;&gt;ecs&lt;/code&gt; in a file with .tf extension. &lt;a href=&quot;https://github.com/search?utf8=%E2%9C%93&amp;amp;q=ecs+extension%3Atf&amp;amp;type=Repositories&amp;amp;ref=advsearch&amp;amp;l=&amp;amp;l=&quot;&gt;github&lt;/a&gt;&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ecs extension:tf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;another-practical-example-is-to-search-for-content-that-are-usually-in-a-certain-path-for-example-circleci-20-files-are-are-stored-in-repo-rootcircleciconfigyml-say-you-want-to-find-an-example-of-psql-usage-in-circleci-manifest-file-github&quot;&gt;Another practical example is to search for content that are usually in a certain path. For example circleci 2.0 files are are stored in &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;repo-root&amp;gt;/.circleci/config.yml&lt;/code&gt;. Say you want to find an example of psql usage in circleci manifest file: &lt;a href=&quot;https://github.com/search?q=psql+filename%3Aconfig.yml+path%3A.circleci&amp;amp;type=Repositories&quot;&gt;github&lt;/a&gt;&lt;/h5&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; psql filename:config.yml path:.circleci
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
				<pubDate>Sun, 01 Apr 2018 22:13:00 +0000</pubDate>
				<link>/git,/github/2018/04/01/useful-github-search-queries.html</link>
				<guid isPermaLink="true">/git,/github/2018/04/01/useful-github-search-queries.html</guid>
			</item>
		
			<item>
				<title>Server-Side Encryption with Customer-Provided Encryption Keys </title>
				<description>&lt;p&gt;Per AWS docs requirements for encryptions are:
https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html&lt;/p&gt;

&lt;h5 id=&quot;1-generate-your-aes256-keys&quot;&gt;1. Generate your AES256 keys.&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜ cat testing
this is a test
➜ echo -n your-super-secret-phrase-string | openssl dgst -sha256 -binary &amp;gt; aes256.key    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;3-encrypt-and-upload-your-file&quot;&gt;3. Encrypt and upload your file&lt;/h5&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜ aws --profile=personal \
s3api put-object \
--bucket=shaytac-test \
--key=test2 \
--body=testing \
--sse-customer-algorithm=AES256 \
--sse-customer-key=fileb://aes256.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;4-decrypt-and-download-your-file&quot;&gt;4. Decrypt and download your file&lt;/h5&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜ aws --profile=personal \
s3api get-object \
--bucket=shaytac-test \
--key=test2  \
--sse-customer-algorithm=AES256 \
--sse-customer-key=fileb://aes256.key testing-downloaded
➜ cat testing-downloaded
this is a test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
				<pubDate>Fri, 05 Jan 2018 22:13:00 +0000</pubDate>
				<link>/s3,/encryption/2018/01/05/S3-server-side-encryption-with-customer-provided-enc-keys.html</link>
				<guid isPermaLink="true">/s3,/encryption/2018/01/05/S3-server-side-encryption-with-customer-provided-enc-keys.html</guid>
			</item>
		
			<item>
				<title>Encrypting files with rsa key pairs.</title>
				<description>&lt;p&gt;My day job i use ssh… alot. When you manage hundreds of servers with mission critical infastructure running on passswordless login with ssh keys can be huge time saver. I also take security pretty seriously when it comes to store sensitive information and always looking to find better ways to store sensitive information securely and also in  a convenient way for it to be not cumbersome. 
With that thought combining ssh keys to encrypt/decrypt files made quite sense so here is a quick write up to do it for anyone else that are interested in it.&lt;/p&gt;

&lt;h5 id=&quot;1-create-or-open-a-file-that-you-would-like-to-encrypt&quot;&gt;1. Create or open a file that you would like to encrypt.&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  ~ echo &quot;my super secret information&quot; &amp;gt; secret.txt
➜  ~ cat secret.txt 
my super secret information
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h5 id=&quot;2-if-you-havent-already-create-a-rsa-key-pair-if-you-would-like-to-use-existing-rsa-key-pair-skip-this-step-and-continue-to-step-3&quot;&gt;2. If you havent already create a rsa key pair. If you would like to use existing rsa key pair skip this step and continue to step 3.&lt;/h5&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh-keygen
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;3-export-your-generated-or-existing-public-key-to-pem-format&quot;&gt;3. Export your generated or existing public key to pem format.&lt;/h5&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openssl rsa -in ~/.ssh/id_rsa -pubout &amp;gt; ~/id_rsa.pub.pem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;4-now-you-are-ready-encrypt-the-file-you-created-earliear&quot;&gt;4. Now you are ready encrypt the file you created earliear.&lt;/h5&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat secret.txt  | openssl rsautl -encrypt -pubin -inkey ~/id_rsa.pub.pem &amp;gt; encrypted-secret.txt
cat encrypted-secret.txt 
????uG?????$?&amp;amp;?????VN?'?(????,þQaE咫:?i??t?(?jr.g?#?ջO???=*?e??&amp;lt;&quot;?y'% 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;5-to-decypt-the-secret&quot;&gt;5. To decypt the secret&lt;/h5&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  ~ cat encrypted-secret.txt  | openssl rsautl -decrypt -inkey ~/.ssh/id_rsa
my super secret information
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
				<pubDate>Sun, 03 Dec 2017 22:13:00 +0000</pubDate>
				<link>/ssh,/encryption/2017/12/03/encrypting-files-rsa-key-pairs.html</link>
				<guid isPermaLink="true">/ssh,/encryption/2017/12/03/encrypting-files-rsa-key-pairs.html</guid>
			</item>
		
	</channel>
</rss>
